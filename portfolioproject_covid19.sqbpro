<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/Dell/Downloads/portfolioproject.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="6285"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,24:mainpercentvaccinepopulation"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="CovidDeath_table1" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="70"/><column index="2" value="70"/><column index="3" value="74"/><column index="4" value="73"/><column index="5" value="77"/><column index="6" value="84"/><column index="7" value="80"/><column index="8" value="152"/><column index="9" value="92"/><column index="10" value="88"/><column index="11" value="160"/><column index="12" value="161"/><column index="13" value="157"/><column index="14" value="229"/><column index="15" value="169"/><column index="16" value="165"/><column index="17" value="237"/><column index="18" value="128"/><column index="19" value="88"/><column index="20" value="165"/><column index="21" value="101"/><column index="22" value="178"/><column index="23" value="157"/><column index="24" value="234"/><column index="25" value="170"/><column index="26" value="247"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="percentvaccinepopulation" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="70"/><column index="2" value="60"/><column index="3" value="60"/><column index="4" value="76"/><column index="5" value="124"/><column index="6" value="177"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">SELECT *
FROM CovidDeath_table1
ORDER BY 3,4

-- CovidDeath_vaccin
-- ORDER BY 3,4
-- FROM 

-- Selecting the data that is needed
SELECT location,date,total_cases,new_cases,total_deaths,population
FROM CovidDeath_table1
ORDER BY 1,2

-- Observing total cases against total death
SELECT location,date,total_cases,total_deaths,(total_deaths/total_cases) AS deathcal
FROM CovidDeath_table1
WHERE location is &quot;Nigeria&quot;
ORDER BY 1,2


--   Looking at total cases vs population
-- just shows what percentage of covid gotten by the population
SELECT location,date,total_cases,population,CAST (total_cases/population as INT)
FROM CovidDeath_table1
WHERE location is &quot;Nigeria&quot;
ORDER BY 1,2


-- Looking at countries with the highest infection rate
SELECT location,population,max(total_cases) AS highest_infected
FROM CovidDeath_table1
Group By location,population
ORDER BY highest_infected DESC


-- Showing countries with the highest death count
SELECT location,population,max(CAST(total_deaths as int)) AS highest_death
FROM CovidDeath_table1
WHERE continent is NOT NULL
GROUP BY location,population
ORDER BY highest_death DESC

-- showing the highest deaths by continent
SELECT location,population,max(CAST(total_deaths as int)) AS highest_death
FROM CovidDeath_table1
WHERE continent is  NULL
GROUP BY location,population
ORDER BY highest_death DESC

-- Global findings
SELECT date,sum(new_cases), sum (CAST (new_deaths as INT)),sum (CAST (new_deaths as INT))/sum(new_cases)* 100 AS death_percentile 
FROM CovidDeath_table1
WHERE continent is NULL
GROUP by date
ORDER by 1,2


-- Joining both the databsse (covid death table and covid death vacinne table
SELECT *
FROM CovidDeath_table1 tab
 JOIN CovidDeath_vaccin vac
  on tab.location = vac.location
  AND tab.date = vac.date

--   total population vs vaccination

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
sum(CAST (vac.new_vaccinations as int)) OVER (PARTITION by dea.location ORDER by dea.location,dea.date) as rolling_people_vaccinated
FROM CovidDeath_table1 dea
 JOIN CovidDeath_vaccin vac
  on dea.location = vac.location
  AND dea.date = vac.date
  WHERE dea.continent is NOT NULL
  ORDER by 2,3

-- creating a temp table using CTE 
with popvac (continent,location,date,population, new_vaccinations,rolling_people_vaccinated)
as
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
sum(CAST (vac.new_vaccinations as int)) OVER (PARTITION by dea.location ORDER by dea.location,dea.date) as rolling_people_vaccinated
FROM CovidDeath_table1 dea
 JOIN CovidDeath_vaccin vac
  on dea.location = vac.location
  AND dea.date = vac.date
  WHERE dea.continent is NOT NULL
  ORDER by 2,3
  )
  SELECT *, (rolling_people_vaccinated/population) * 100
  FROM popvac

-- the temp table

CREATE table percentvaccinepopulation
(
continent TEXT,
location TEXT,
date datetime,
population NUMERIC,
new_vaccinations NUMERIC,
rolling_people_vaccinated NUMERIC
)
INSERT INTO percentvaccinepopulation
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
sum(CAST (vac.new_vaccinations as int)) OVER (PARTITION by dea.location ORDER by dea.location,dea.date) as rolling_people_vaccinated
FROM CovidDeath_table1 dea
 JOIN CovidDeath_vaccin vac
  on dea.location = vac.location
  AND dea.date = vac.date
  WHERE dea.continent is NOT NULL
  ORDER by 2,3

  SELECT *, (rolling_people_vaccinated/population) * 100
  FROM percentvaccinepopulation



creating views for vizualization
CREATE view percentvaccinepopulation as
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
sum(CAST (vac.new_vaccinations as int)) OVER (PARTITION by dea.location ORDER by dea.location,dea.date) as rolling_people_vaccinated
FROM CovidDeath_table1 dea
 JOIN CovidDeath_vaccin vac
  on dea.location = vac.location
  AND dea.date = vac.date
  WHERE dea.continent is NOT NULL
  ORDER by 2,3

</sql><current_tab id="0"/></tab_sql></sqlb_project>
